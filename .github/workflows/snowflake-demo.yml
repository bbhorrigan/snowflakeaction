name: Snowflake Demo Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  snowflake_query:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SnowSQL Using Official Package
        run: |
          echo "Installing SnowSQL..."
          
          # Add Snowflake’s package repository and install SnowSQL
          sudo apt update && sudo apt install -y python3-pip
          pip install --upgrade snowflake-cli-labs

          echo "Checking if SnowSQL is installed..."
          which snowsql || echo "❌ SnowSQL not found"
          snowsql --version || echo "❌ SnowSQL failed to run"

      - name: Configure SnowSQL Connection
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        run: |
          echo "Creating SnowSQL config directory..."
          mkdir -p ~/.snowsql  # Ensure the directory exists

          echo "Configuring SnowSQL..."
          cat << EOF > ~/.snowsql/config
          [connections.my_snowflake]
          accountname = $SNOWFLAKE_ACCOUNT
          username = $SNOWFLAKE_USER
          password = $SNOWFLAKE_PASSWORD
          dbname = $SNOWFLAKE_DATABASE
          warehousename = $SNOWFLAKE_WAREHOUSE
          rolename = $SNOWFLAKE_ROLE
          EOF

          chmod 600 ~/.snowsql/config  # Secure the config file

          echo "✅ SnowSQL is now configured!"

      - name: Run Snowflake Query
        run: |
          # Ensure CLI is installed before proceeding
          which snowsql || exit 1
          echo "✅ Running Snowflake queries..."

          # Test connection
          snowsql -c my_snowflake -q "SELECT CURRENT_USER(), CURRENT_ROLE(), CURRENT_DATABASE(), CURRENT_WAREHOUSE();"

          # Create a test table
          snowsql -c my_snowflake -q "
          CREATE TABLE IF NOT EXISTS DEMO_TABLE (
            id INT AUTOINCREMENT PRIMARY KEY,
            name STRING,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );"

          # Insert sample data
          snowsql -c my_snowflake -q "
          INSERT INTO DEMO_TABLE (name) VALUES 
          ('GitHub Actions Demo 1'), 
          ('GitHub Actions Demo 2');"

          # Retrieve data
          snowsql -c my_snowflake -q "SELECT * FROM DEMO_TABLE;"
